{
  "decision tree": "A Decision Tree is simple, fast, and good for understanding decisions in data.",
  "tree": "A Decision Tree is simple, fast, and good for understanding decisions in data.",
  "svm": "SVM (Support Vector Machine) is powerful for high-dimensional data and binary classification.",
  "support vector": "SVM (Support Vector Machine) is powerful for high-dimensional data and binary classification.",
  "logistic regression": "Logistic Regression is ideal for predicting binary outcomes like yes/no.",
  "logistic": "Logistic Regression is ideal for predicting binary outcomes like yes/no.",
  "linear regression": "Linear Regression is great for predicting continuous values like price, marks, etc.",
  "linear": "Linear Regression is great for predicting continuous values like price, marks, etc.",
  "accuracy": "Accuracy tells how many predictions your model got right.",
  "dataset": "A dataset contains the input features and labels to train ML models.",
  "csv": "A dataset in CSV format is commonly used for training ML models.",
  "train": "Training teaches the model from examples.",
  "test": "Testing checks how well your trained model performs.",
  "training": "Training teaches the model from examples.",
  "testing": "Testing checks how well your trained model performs.",
  "predict": "Prediction in ML means estimating output for new, unseen data.",
  "prediction": "Prediction in ML means estimating output for new, unseen data.",
  "overfitting": "Overfitting is when the model memorizes the training data and performs badly on new data.",
  "underfitting": "Underfitting is when the model is too simple and fails to capture the data patterns.",
  "random forest": "Random Forest builds many decision trees and averages their predictions for better accuracy.",
  "forest": "Random Forest builds many decision trees and averages their predictions for better accuracy.",
  "supervised": "Supervised learning uses input-output pairs (labels) to learn.",
  "unsupervised": "Unsupervised learning finds hidden patterns in data without labels.",
  "ml": "ML stands for Machine Learning. It lets computers learn from data and make predictions.",
  "machine learning": "Machine Learning helps systems learn from data and make predictions.",
  "ai": "AI stands for Artificial Intelligence — it includes ML, deep learning, and more.",
  "artificial intelligence": "AI stands for Artificial Intelligence — it includes ML, deep learning, and more.",
  "dl": "DL means Deep Learning. It uses neural networks for tasks like image and speech recognition.",
  "deep learning": "Deep Learning uses neural networks to learn from complex data like images or audio.",
  "feature": "A feature is an input variable used to make predictions.",
  "features": "A feature is an input variable used to make predictions.",
  "label": "A label is the actual outcome the model is trying to predict.",
  "labels": "A label is the actual outcome the model is trying to predict.",
  "mlgpt": "MLGPT helps you apply machine learning to your own datasets easily!",
  "why this model": "Different models work better for different types of data. You can experiment and compare!",
  "choose model": "Different models work better for different types of data. Try them out and see!",
  "pandas": "Pandas is a Python library for handling data tables and performing data manipulation.",
  "numpy": "NumPy is used for fast numerical operations and handling arrays in Python.",
  "matplotlib": "Matplotlib (plt) is used to visualize data using charts like bar plots, line graphs, etc.",
  "plt": "‘plt’ is short for matplotlib.pyplot, used for drawing graphs and charts in ML.",
  "graph": "Use matplotlib or seaborn to draw charts and graphs.",
  "visualize": "Use matplotlib or seaborn to draw charts and graphs.",
  "sklearn": "Scikit-learn is a machine learning library that provides tools to build and evaluate models.",
  "model selection": "Model selection helps choose the best ML algorithm based on accuracy and performance.",
  "cross validation": "Cross-validation helps test model performance on different parts of data.",
  "split data": "Use train_test_split from sklearn.model_selection to split data into train and test sets.",
  "train test split": "Use train_test_split from sklearn.model_selection to split data into train and test sets.",
  "label encoding": "LabelEncoder from sklearn can convert text labels into numbers for ML models.",
  "encode": "LabelEncoder from sklearn can convert text labels into numbers for ML models."
}
